[{"C:\\Users\\Nishidha\\Desktop\\Webd\\cutshot\\client\\src\\index.js":"1","C:\\Users\\Nishidha\\Desktop\\Webd\\cutshot\\client\\src\\App.js":"2","C:\\Users\\Nishidha\\Desktop\\Webd\\cutshot\\client\\src\\pages\\HomePage.js":"3","C:\\Users\\Nishidha\\Desktop\\Webd\\cutshot\\client\\src\\components\\navbar.js":"4","C:\\Users\\Nishidha\\Desktop\\Webd\\cutshot\\client\\src\\components\\first-block.js":"5","C:\\Users\\Nishidha\\Desktop\\Webd\\cutshot\\client\\src\\components\\second-block.js":"6","C:\\Users\\Nishidha\\Desktop\\Webd\\cutshot\\client\\src\\pages\\InstituteDashboard.js":"7","C:\\Users\\Nishidha\\Desktop\\Webd\\cutshot\\client\\src\\components\\InstiFirstBlock.js":"8","C:\\Users\\Nishidha\\Desktop\\Webd\\cutshot\\client\\src\\components\\BarAndPie.js":"9","C:\\Users\\Nishidha\\Desktop\\Webd\\cutshot\\client\\src\\components\\StatesPie.js":"10","C:\\Users\\Nishidha\\Desktop\\Webd\\cutshot\\client\\src\\pages\\StudentDashboard.js":"11","C:\\Users\\Nishidha\\Desktop\\Webd\\cutshot\\client\\src\\components\\Students.js":"12","C:\\Users\\Nishidha\\Desktop\\Webd\\cutshot\\client\\src\\auth.js":"13","C:\\Users\\Nishidha\\Desktop\\Webd\\cutshot\\client\\src\\pages\\StudentDetails.js":"14","C:\\Users\\Nishidha\\Desktop\\Webd\\cutshot\\client\\src\\components\\StudentProfile.js":"15","C:\\Users\\Nishidha\\Desktop\\Webd\\cutshot\\client\\src\\components\\StateModal.js":"16","C:\\Users\\Nishidha\\Desktop\\Webd\\cutshot\\client\\src\\components\\CourseModal.js":"17","C:\\Users\\Nishidha\\Desktop\\Webd\\cutshot\\client\\src\\pages\\InstituteDetails.js":"18","C:\\Users\\Nishidha\\Desktop\\Webd\\cutshot\\client\\src\\components\\InstituteProfile.js":"19","C:\\Users\\Nishidha\\Desktop\\Webd\\cutshot\\client\\src\\components\\InstituteStudents.js":"20"},{"size":254,"mtime":1611483880806,"results":"21","hashOfConfig":"22"},{"size":871,"mtime":1611684060016,"results":"23","hashOfConfig":"22"},{"size":344,"mtime":1611494654213,"results":"24","hashOfConfig":"22"},{"size":1302,"mtime":1611727798087,"results":"25","hashOfConfig":"22"},{"size":841,"mtime":1611692519163,"results":"26","hashOfConfig":"22"},{"size":1208,"mtime":1611724042593,"results":"27","hashOfConfig":"22"},{"size":474,"mtime":1611508713482,"results":"28","hashOfConfig":"22"},{"size":1295,"mtime":1611514885424,"results":"29","hashOfConfig":"22"},{"size":1296,"mtime":1611681268856,"results":"30","hashOfConfig":"22"},{"size":6868,"mtime":1611728573403,"results":"31","hashOfConfig":"22"},{"size":309,"mtime":1611653838996,"results":"32","hashOfConfig":"22"},{"size":1791,"mtime":1611690449341,"results":"33","hashOfConfig":"22"},{"size":457,"mtime":1611725608783,"results":"34","hashOfConfig":"22"},{"size":354,"mtime":1611656379744,"results":"35","hashOfConfig":"22"},{"size":2993,"mtime":1611726056629,"results":"36","hashOfConfig":"22"},{"size":1345,"mtime":1611685551208,"results":"37","hashOfConfig":"22"},{"size":1364,"mtime":1611685279473,"results":"38","hashOfConfig":"22"},{"size":428,"mtime":1611688499501,"results":"39","hashOfConfig":"22"},{"size":2619,"mtime":1611688798799,"results":"40","hashOfConfig":"22"},{"size":4388,"mtime":1611726014622,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1ozriu",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"44"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"44"},"C:\\Users\\Nishidha\\Desktop\\Webd\\cutshot\\client\\src\\index.js",[],["91","92"],"C:\\Users\\Nishidha\\Desktop\\Webd\\cutshot\\client\\src\\App.js",[],"C:\\Users\\Nishidha\\Desktop\\Webd\\cutshot\\client\\src\\pages\\HomePage.js",[],"C:\\Users\\Nishidha\\Desktop\\Webd\\cutshot\\client\\src\\components\\navbar.js",[],"C:\\Users\\Nishidha\\Desktop\\Webd\\cutshot\\client\\src\\components\\first-block.js",[],"C:\\Users\\Nishidha\\Desktop\\Webd\\cutshot\\client\\src\\components\\second-block.js",[],"C:\\Users\\Nishidha\\Desktop\\Webd\\cutshot\\client\\src\\pages\\InstituteDashboard.js",[],"C:\\Users\\Nishidha\\Desktop\\Webd\\cutshot\\client\\src\\components\\InstiFirstBlock.js",[],"C:\\Users\\Nishidha\\Desktop\\Webd\\cutshot\\client\\src\\components\\BarAndPie.js",["93"],"import React from \"react\";\r\nimport Chart from \"chart.js\";\r\n\r\nclass BarAndPie extends React.Component {\r\n  componentDidMount() {\r\n    var ctx = document.getElementById(\"myChart\").getContext(\"2d\");\r\n\r\n    var myChart = new Chart(ctx, {\r\n      type: \"line\",\r\n      data: {\r\n        labels: [\"2014\", \"2015\", \"2016\", \"2017\", \"2018\", \"2019\", \"2020\"],\r\n        datasets: [\r\n          {\r\n            label: \"Students joing institutes through years (in Cr.)\", // Name the series\r\n            data: [3, 3.1, 3.25, 3.3, 3.5, 3.6, 3.74], // Specify the data values array\r\n            fill: true,\r\n            borderColor: \"purple\", // Add custom color border (Line)\r\n            backgroundColor: \"#fcaaa9\", // Add custom color background (Points and Fill)\r\n            borderWidth: 1, // Specify bar border width\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        responsive: true, // Instruct chart js to respond nicely.\r\n        maintainAspectRatio: false, // Add to prevent default behaviour of full-width/height\r\n      },\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <canvas\r\n          id=\"myChart\"\r\n          height=\"400px\"\r\n          width=\"500px\"\r\n          style={{ background: \"beige\" }}\r\n        ></canvas>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BarAndPie;\r\n","C:\\Users\\Nishidha\\Desktop\\Webd\\cutshot\\client\\src\\components\\StatesPie.js",["94","95"],"import React from \"react\";\r\nimport { getColleges } from \"../auth\";\r\nimport Chart from \"chart.js\";\r\nimport StateModal from \"./StateModal\";\r\nimport CourseModal from \"./CourseModal\";\r\n\r\nclass StatesPie extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      collist: [],\r\n      selectState: \"\",\r\n      selectedCourse: \"\",\r\n      stateMap: new Map(),\r\n      courseMap: new Map(),\r\n      stateOpen: false,\r\n      courseOpen: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // let ls = [...this.state.stateCount.keys()];\r\n    // let values = [...this.state.stateCount.values()];\r\n    var canvas1 = document.getElementById(\"chart1\");\r\n    var chart1 = new Chart(canvas1, {\r\n      type: \"doughnut\",\r\n      data: {\r\n        labels: [],\r\n        datasets: [\r\n          {\r\n            label: \"\",\r\n            backgroundColor: [\r\n              \"#3e95cd\",\r\n              \"#8e5ea2\",\r\n              \"#3cba9f\",\r\n              \"#e8c3b9\",\r\n              \"#c45850\",\r\n              \"#8db2ec\",\r\n              \"#1e2543\",\r\n              \"#b5448f\",\r\n              \"#4122dd\",\r\n              \"#46b476\",\r\n              \"#560618\",\r\n              \"#7a907a\",\r\n              \"#5ad528\",\r\n              \"#d34101\",\r\n              \"#b96133\",\r\n              \"#f499c6\",\r\n            ],\r\n            data: [],\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        title: {\r\n          display: true,\r\n          text: \"Number of colleges in various states\",\r\n        },\r\n        responsive: true, // Instruct chart js to respond nicely.\r\n        maintainAspectRatio: false, // Add to prevent default behaviour of full-width/height\r\n      },\r\n    });\r\n\r\n    canvas1.onclick = (e) => {\r\n      var activePoints = chart1.getElementsAtEvent(e);\r\n      if (activePoints[0] !== undefined) {\r\n        var chartData = activePoints[0][\"_chart\"].config.data;\r\n        var selectedIndex = activePoints[0]._index;\r\n        this.setState({ selectState: chartData.labels[selectedIndex] });\r\n        this.handleStateOpen();\r\n      }\r\n    };\r\n\r\n    var canvas2 = document.getElementById(\"chart2\");\r\n    var chart2 = new Chart(canvas2, {\r\n      type: \"doughnut\",\r\n      data: {\r\n        labels: [],\r\n        datasets: [\r\n          {\r\n            label: \"\",\r\n            backgroundColor: [\r\n              \"#3e95cd\",\r\n              \"#8e5ea2\",\r\n              \"#3cba9f\",\r\n              \"#e8c3b9\",\r\n              \"#c45850\",\r\n              \"#8db2ec\",\r\n              \"#1e2543\",\r\n              \"#b5448f\",\r\n              \"#4122dd\",\r\n              \"#46b476\",\r\n              \"#560618\",\r\n              \"#7a907a\",\r\n              \"#5ad528\",\r\n              \"#d34101\",\r\n              \"#b96133\",\r\n              \"#f499c6\",\r\n              \"#04743e\",\r\n              \"#1f100d\",\r\n              \"#f0ac0a\",\r\n              \"#fad289\",\r\n              \"#e69247\",\r\n              \"#801d1d\",\r\n            ],\r\n            data: [],\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        title: {\r\n          display: true,\r\n          text: \"Course Popularity in Colleges\",\r\n        },\r\n        responsive: true, // Instruct chart js to respond nicely.\r\n        maintainAspectRatio: false, // Add to prevent default behaviour of full-width/height\r\n      },\r\n    });\r\n\r\n    canvas2.onclick = (e) => {\r\n      var activePoints = chart2.getElementsAtEvent(e);\r\n      if (activePoints[0] !== undefined) {\r\n        var chartData = activePoints[0][\"_chart\"].config.data;\r\n        var selectedIndex = activePoints[0]._index;\r\n        this.setState({ selectedCourse: chartData.labels[selectedIndex] });\r\n        this.handleCourseOpen();\r\n      }\r\n    };\r\n\r\n    getColleges()\r\n      .then((col) => {\r\n        chart1.data.datasets[0].data = [15];\r\n        var stateArr = [];\r\n        var stateCountArr = [];\r\n        var courseArr = [];\r\n        var courseCountArr = [];\r\n        this.setState({ collist: col.data });\r\n        let len = col.data.length;\r\n        let dumS = new Map();\r\n        let dumC = new Map();\r\n        for (let i = 0; i < len; i++) {\r\n          dumS.get(col.data[i].state)\r\n            ? dumS.set(col.data[i].state, dumS.get(col.data[i].state) + 1)\r\n            : dumS.set(col.data[i].state, 1);\r\n\r\n          let len2 = col.data[i].courses.length;\r\n          for (let j = 0; j < len2; j++) {\r\n            dumC.get(col.data[i].courses[j])\r\n              ? dumC.set(\r\n                  col.data[i].courses[j],\r\n                  dumC.get(col.data[i].courses[j]) + 1\r\n                )\r\n              : dumC.set(col.data[i].courses[j], 1);\r\n          }\r\n        }\r\n\r\n        [...dumS.keys()].map((state) => {\r\n          stateArr.push(state);\r\n        });\r\n\r\n        [...dumS.values()].map((stateCount) => {\r\n          stateCountArr.push(stateCount);\r\n          return null;\r\n        });\r\n\r\n        chart1.data.labels = stateArr;\r\n        chart1.data.datasets[0].data = stateCountArr;\r\n\r\n        chart2.data.labels = courseArr;\r\n        chart2.data.datasets[0].data = courseCountArr;\r\n\r\n        [...dumC.keys()].map((course) => {\r\n          courseArr.push(course);\r\n        });\r\n\r\n        [...dumC.values()].map((courseCount) => {\r\n          courseCountArr.push(courseCount);\r\n          return null;\r\n        });\r\n\r\n        this.setState({ stateMap: dumS, courseMap: dumC });\r\n      })\r\n      .catch((err) => console.log(err.message));\r\n\r\n    setTimeout(function () {\r\n      chart1.update();\r\n      chart2.update();\r\n    }, 1200);\r\n\r\n    // setTimeout(function () {\r\n    //   chart1.update();\r\n    //   chart2.update();\r\n    // }, 1000);\r\n  }\r\n\r\n  handleCourseOpen = () => {\r\n    this.setState((prev) => ({ courseOpen: !prev.courseOpen }));\r\n  };\r\n\r\n  handleStateOpen = () => {\r\n    this.setState((prev) => ({ stateOpen: !prev.stateOpen }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          <canvas\r\n            style={{ cursor: \"pointer\" }}\r\n            id=\"chart1\"\r\n            width=\"800\"\r\n            height=\"450\"\r\n          ></canvas>\r\n        </div>\r\n        <h1 style={{ textAlign: \"center\" }}>\r\n          Click on pie charts for more colleges details\r\n        </h1>\r\n        <div>\r\n          <canvas\r\n            style={{ cursor: \"pointer\" }}\r\n            id=\"chart2\"\r\n            width=\"800\"\r\n            height=\"450\"\r\n          ></canvas>\r\n        </div>\r\n        <div>\r\n          <StateModal\r\n            isOpen={this.state.stateOpen}\r\n            handleOpen={this.handleStateOpen}\r\n            val={this.state.selectState}\r\n            map={this.state.stateMap}\r\n            colleges={this.state.collist}\r\n          />\r\n          <CourseModal\r\n            isOpen={this.state.courseOpen}\r\n            handleOpen={this.handleCourseOpen}\r\n            val={this.state.selectedCourse}\r\n            map={this.state.courseMap}\r\n            colleges={this.state.collist}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StatesPie;\r\n","C:\\Users\\Nishidha\\Desktop\\Webd\\cutshot\\client\\src\\pages\\StudentDashboard.js",[],"C:\\Users\\Nishidha\\Desktop\\Webd\\cutshot\\client\\src\\components\\Students.js",["96"],"import { LoadingOutlined } from \"@ant-design/icons\";\r\nimport { Table } from \"antd\";\r\nimport React from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport { getStudents } from \"../auth\";\r\nimport \"../css/students.css\";\r\n\r\nclass Students extends React.Component {\r\n  state = {\r\n    stuList: [],\r\n    loading: false,\r\n  };\r\n  componentDidMount() {\r\n    this.setState({ loading: true });\r\n    getStudents()\r\n      .then((stu) => this.setState({ stuList: stu.data, loading: false }))\r\n      .catch((err) => console.log(err));\r\n  }\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: \"Student Id\",\r\n        dataIndex: \"sid\",\r\n        key: \"id\",\r\n        sorter: (a, b) => a.sid - b.sid,\r\n      },\r\n      {\r\n        title: \"Name\",\r\n        dataIndex: \"name\",\r\n        key: \"name\",\r\n        ellipsis: true,\r\n        render: (text) => (\r\n          <a onClick={() => this.props.history.push(`/students/${text}`)}>\r\n            {text}\r\n          </a>\r\n        ),\r\n      },\r\n      {\r\n        title: \"Batch Year\",\r\n        dataIndex: \"yearOfBatch\",\r\n        key: \"year\",\r\n        sorter: (a, b) => a.yearOfBatch - b.yearOfBatch,\r\n      },\r\n    ];\r\n    return (\r\n      <div className=\"student-table\">\r\n        <h1 className=\"college-name\" style={{ color: \"#000\" }}>\r\n          All Students\r\n        </h1>\r\n        {this.state.loading ? (\r\n          <div style={{ display: \"flex\" }}>\r\n            <LoadingOutlined style={{ fontSize: 40, margin: \"30px auto\" }} />\r\n          </div>\r\n        ) : (\r\n          <Table\r\n            dataSource={this.state.stuList}\r\n            columns={columns}\r\n            className=\"table\"\r\n            size=\"small\"\r\n            pagination={{ pageSize: 25 }}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Students);\r\n","C:\\Users\\Nishidha\\Desktop\\Webd\\cutshot\\client\\src\\auth.js",[],["97","98"],"C:\\Users\\Nishidha\\Desktop\\Webd\\cutshot\\client\\src\\pages\\StudentDetails.js",[],"C:\\Users\\Nishidha\\Desktop\\Webd\\cutshot\\client\\src\\components\\StudentProfile.js",[],"C:\\Users\\Nishidha\\Desktop\\Webd\\cutshot\\client\\src\\components\\StateModal.js",["99"],"import { Table } from \"antd\";\r\nimport Modal from \"antd/lib/modal/Modal\";\r\nimport React from \"react\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nconst StateModal = ({ isOpen, handleOpen, val, colleges, map, history }) => {\r\n  const filteredColleges = colleges.filter((u) => u.state === val);\r\n  const columns = [\r\n    {\r\n      title: \"College Id\",\r\n      dataIndex: \"cid\",\r\n      key: \"cid\",\r\n      sorter: (a, b) => a.cid - b.cid,\r\n    },\r\n    {\r\n      title: \"Name of College\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n      render: (text) => (\r\n        <a onClick={() => history.push(`/institutes/${text}`)}>{text}</a>\r\n      ),\r\n    },\r\n    {\r\n      title: \"City\",\r\n      dataIndex: \"city\",\r\n      key: \"city\",\r\n    },\r\n  ];\r\n  return (\r\n    <div>\r\n      <Modal\r\n        title=\"State Statistics\"\r\n        style={{ top: 20 }}\r\n        visible={isOpen}\r\n        onOk={handleOpen}\r\n        onCancel={handleOpen}\r\n      >\r\n        <h1>\r\n          {((map.get(val) * 100) / 150).toFixed(0)}% of colleges in {val}\r\n        </h1>\r\n        <p>List of the Colleges</p>\r\n        <Table\r\n          dataSource={filteredColleges}\r\n          columns={columns}\r\n          className=\"table\"\r\n          size=\"small\"\r\n          pagination={{ pageSize: 10 }}\r\n        />\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(StateModal);\r\n","C:\\Users\\Nishidha\\Desktop\\Webd\\cutshot\\client\\src\\components\\CourseModal.js",["100"],"import { Table } from \"antd\";\r\nimport Modal from \"antd/lib/modal/Modal\";\r\nimport React from \"react\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nconst CourseModal = ({ isOpen, handleOpen, val, colleges, map, history }) => {\r\n  const filteredColleges = colleges.filter((u) => u.courses.includes(val));\r\n  const columns = [\r\n    {\r\n      title: \"College Id\",\r\n      dataIndex: \"cid\",\r\n      key: \"cid\",\r\n      sorter: (a, b) => a.cid - b.cid,\r\n    },\r\n    {\r\n      title: \"Name of College\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n      render: (text) => (\r\n        <a onClick={() => history.push(`/institutes/${text}`)}>{text}</a>\r\n      ),\r\n    },\r\n    {\r\n      title: \"City\",\r\n      dataIndex: \"city\",\r\n      key: \"city\",\r\n    },\r\n  ];\r\n  return (\r\n    <div>\r\n      <Modal\r\n        title=\"Course wise statistics\"\r\n        style={{ top: 20 }}\r\n        visible={isOpen}\r\n        onOk={handleOpen}\r\n        onCancel={handleOpen}\r\n      >\r\n        <h1>\r\n          {((map.get(val) * 100) / 150).toFixed(0)}% of colleges offer {val}\r\n        </h1>\r\n        <p>List of the Colleges</p>\r\n        <Table\r\n          dataSource={filteredColleges}\r\n          columns={columns}\r\n          className=\"table\"\r\n          size=\"small\"\r\n          pagination={{ pageSize: 10 }}\r\n        />\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(CourseModal);\r\n","C:\\Users\\Nishidha\\Desktop\\Webd\\cutshot\\client\\src\\pages\\InstituteDetails.js",[],"C:\\Users\\Nishidha\\Desktop\\Webd\\cutshot\\client\\src\\components\\InstituteProfile.js",["101"],"import { Col, Row } from \"antd\";\r\nimport React from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport { getColleges, getStudents } from \"../auth\";\r\nimport img from \"../assets/insti.png\";\r\nimport \"../css/student-profile.css\";\r\nimport \"../css/institute-profile.css\";\r\nimport { LoadingOutlined } from \"@ant-design/icons\";\r\n\r\nclass InstituteProfile extends React.Component {\r\n  state = {\r\n    colList: [],\r\n    loading: false,\r\n  };\r\n  componentDidMount() {\r\n    this.setState({ loading: true });\r\n\r\n    getColleges()\r\n      .then((col) => {\r\n        this.setState({ colList: col.data, loading: false });\r\n      })\r\n      .catch((err) => console.log(err.message));\r\n  }\r\n  render() {\r\n    // console.log(this.props.match.params);\r\n    const stu = this.state.colList.filter(\r\n      (x) => x.name === this.props.match.params.instiName + \" \"\r\n    );\r\n    const stu1 = this.state.colList.filter(\r\n      (x) => x.name === this.props.match.params.instiName\r\n    );\r\n    let fin = [];\r\n    stu[0] === undefined ? (fin = stu1) : (fin = stu);\r\n    // console.log(fin);\r\n\r\n    return (\r\n      <div className=\"student-profile insti-profile\">\r\n        <Row>\r\n          <Col className=\"first-col\" md={10} sm={24}>\r\n            <img src={img} alt=\"Varied Studnts\" />\r\n          </Col>\r\n          <Col className=\"second-col\" md={14} sm={24}>\r\n            {!this.state.loading && fin[0] !== undefined ? (\r\n              <div className=\"sec-col\">\r\n                <div className=\"student-data\">\r\n                  <h1 className=\"student-name\">{fin[0].name}</h1>\r\n                  <p className=\"helper-text\">located in</p>\r\n                  <h1 className=\"college-name\">\r\n                    {fin[0].city}, {fin[0].district}\r\n                  </h1>\r\n                  <h1 className=\"college-name\">\r\n                    {fin[0].state}, {fin[0].pincode}\r\n                  </h1>\r\n                  <p className=\"helper-text\" style={{ margin: \"20px 0\" }}>\r\n                    offer courses like\r\n                  </p>\r\n                  {fin[0].courses.map((i) => (\r\n                    <h1 className=\"college-name\">{i}</h1>\r\n                  ))}\r\n                  <h1 className=\"college-name\">{fin[0].skills}</h1>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div style={{ display: \"flex\", height: \"100%\" }}>\r\n                <LoadingOutlined\r\n                  style={{ fontSize: 40, color: \"white\", margin: \"auto\" }}\r\n                />\r\n              </div>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(InstituteProfile);\r\n","C:\\Users\\Nishidha\\Desktop\\Webd\\cutshot\\client\\src\\components\\InstituteStudents.js",["102","103"],"import { LoadingOutlined } from \"@ant-design/icons\";\r\nimport { Table } from \"antd\";\r\nimport React from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport { getColleges, getStudents } from \"../auth\";\r\n\r\nclass InstituteStudents extends React.Component {\r\n  state = {\r\n    loading: false,\r\n    stuList: [],\r\n    colList: [],\r\n  };\r\n  componentDidMount() {\r\n    this.setState({ loading: true });\r\n    getStudents()\r\n      .then((stu) => {\r\n        this.setState({ stuList: stu.data, loading: false });\r\n      })\r\n      .catch((err) => console.log(err));\r\n\r\n    getColleges()\r\n      .then((col) => {\r\n        this.setState({ colList: col.data, loading: false });\r\n      })\r\n      .catch((err) => console.log(err.message));\r\n  }\r\n  render() {\r\n    let filteredStudents = [];\r\n    // console.log(this.state.colList);\r\n    let fil = this.state.colList.filter(\r\n      (c) => c.name === this.props.match.params.instiName\r\n    );\r\n    let similarColleges = [];\r\n    if (fil[0] !== undefined) {\r\n      filteredStudents = this.state.stuList.filter((i) => i.cid === fil[0].cid);\r\n      // console.log(filteredStudents);\r\n      const { city, state, region, name } = fil[0];\r\n\r\n      similarColleges = this.state.colList.filter(\r\n        (c) => c.city === city && c.name !== name\r\n      );\r\n      if (similarColleges.length < 6) {\r\n        let sim = this.state.colList.filter(\r\n          (c) => c.city !== city && c.state === state && c.name !== name\r\n        );\r\n        for (let i = 0; i < 5 - similarColleges.length; i++) {\r\n          similarColleges.push(sim[i]);\r\n        }\r\n      }\r\n\r\n      if (similarColleges.length < 6) {\r\n        let sim = this.state.colList.filter(\r\n          (c) =>\r\n            c.city !== city &&\r\n            c.state !== state &&\r\n            c.region === region &&\r\n            c.name !== name\r\n        );\r\n        for (let i = 0; i < 5 - similarColleges.length; i++) {\r\n          similarColleges.push(sim[i]);\r\n        }\r\n      }\r\n    }\r\n\r\n    const columns = [\r\n      {\r\n        title: \"Student Id\",\r\n        dataIndex: \"sid\",\r\n        key: \"id\",\r\n        sorter: (a, b) => a.sid - b.sid,\r\n      },\r\n      {\r\n        title: \"Name\",\r\n        dataIndex: \"name\",\r\n        key: \"name\",\r\n        ellipsis: true,\r\n        render: (text) => (\r\n          <a onClick={() => this.props.history.push(`/students/${text}`)}>\r\n            {text}\r\n          </a>\r\n        ),\r\n      },\r\n      {\r\n        title: \"Batch Year\",\r\n        dataIndex: \"yearOfBatch\",\r\n        key: \"year\",\r\n        sorter: (a, b) => a.yearOfBatch - b.yearOfBatch,\r\n      },\r\n    ];\r\n    const columns1 = [\r\n      {\r\n        title: \"College Id\",\r\n        dataIndex: \"cid\",\r\n        key: \"id\",\r\n        sorter: (a, b) => a.sid - b.sid,\r\n      },\r\n      {\r\n        title: \"Name\",\r\n        dataIndex: \"name\",\r\n        key: \"name\",\r\n        ellipsis: true,\r\n        render: (text) => (\r\n          <a onClick={() => this.props.history.push(`/institutes/${text}`)}>\r\n            {text}\r\n          </a>\r\n        ),\r\n      },\r\n      {\r\n        title: \"City\",\r\n        dataIndex: \"city\",\r\n        key: \"city\",\r\n      },\r\n      {\r\n        title: \"State\",\r\n        dataIndex: \"state\",\r\n        key: \"state\",\r\n      },\r\n      {\r\n        title: \"Region\",\r\n        dataIndex: \"region\",\r\n        key: \"region\",\r\n      },\r\n    ];\r\n    return (\r\n      <div className=\"student-table\">\r\n        <h1 style={{ color: \"#000\" }} className=\"college-name\">\r\n          Students of this College\r\n        </h1>\r\n        {this.state.loading ? (\r\n          <div style={{ display: \"flex\" }}>\r\n            <LoadingOutlined style={{ fontSize: 40, margin: \"30px auto\" }} />\r\n          </div>\r\n        ) : (\r\n          <React.Fragment>\r\n            <Table\r\n              dataSource={filteredStudents}\r\n              columns={columns}\r\n              className=\"table\"\r\n              size=\"small\"\r\n              pagination={{ pageSize: 5 }}\r\n            />\r\n            <h1 style={{ color: \"#000\" }} className=\"college-name\">\r\n              Nearby similar colleges\r\n            </h1>\r\n            <Table\r\n              dataSource={similarColleges}\r\n              columns={columns1}\r\n              className=\"table similar-table\"\r\n              size=\"small\"\r\n              pagination={{ pageSize: 5 }}\r\n            />\r\n          </React.Fragment>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(InstituteStudents);\r\n",{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":8,"column":9,"nodeType":"110","messageId":"111","endLine":8,"endColumn":16},{"ruleId":"112","severity":1,"message":"113","line":157,"column":38,"nodeType":"114","messageId":"115","endLine":157,"endColumn":40},{"ruleId":"112","severity":1,"message":"113","line":172,"column":39,"nodeType":"114","messageId":"115","endLine":172,"endColumn":41},{"ruleId":"116","severity":1,"message":"117","line":33,"column":11,"nodeType":"118","endLine":33,"endColumn":75},{"ruleId":"104","replacedBy":"119"},{"ruleId":"106","replacedBy":"120"},{"ruleId":"116","severity":1,"message":"117","line":20,"column":9,"nodeType":"118","endLine":20,"endColumn":64},{"ruleId":"116","severity":1,"message":"117","line":20,"column":9,"nodeType":"118","endLine":20,"endColumn":64},{"ruleId":"108","severity":1,"message":"121","line":4,"column":23,"nodeType":"110","messageId":"111","endLine":4,"endColumn":34},{"ruleId":"116","severity":1,"message":"117","line":78,"column":11,"nodeType":"118","endLine":78,"endColumn":75},{"ruleId":"116","severity":1,"message":"117","line":103,"column":11,"nodeType":"118","endLine":103,"endColumn":77},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"no-unused-vars","'myChart' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["122"],["123"],"'getStudents' is defined but never used.","no-global-assign","no-unsafe-negation"]